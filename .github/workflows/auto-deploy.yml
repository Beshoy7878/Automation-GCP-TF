name: Auto GCP Project Plan

on:
  push:
    branches:
      - main
 
    paths:
      - 'configs/*.yaml'
      - 'configs/*.yml'
  workflow_dispatch:

jobs:
  generate-plan:
    name: Run Terraform Plan from YAML
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS}}
      TF_IN_AUTOMATION: true
      TF_INPUT: false

    steps:
      #  Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

        #  Detect newly added files only
      - name: Check for new config files
        id: new_files
        run: |
            git diff --name-status HEAD~1 HEAD | grep '^A.*configs/' || echo "NO_NEW_FILES"
        continue-on-error: true


      #  Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      #  Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml pydot

      #  Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
           credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
           project_id: your-gcp-project-id

      #  Verify GCP authentication
      - name: Verify GCP login
        run: |
          gcloud auth list
          gcloud config get-value project

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4

      #  Run deploy.py
      - name: Run deployment script
        run: python scripts/deploy.py --overwrite

       # Configure Git user for the commit
      - name: Configure Git
        run: |
          git config --global user.name "Beshoy7878"
          git config --global user.email "beshooseha@gmail.com"

      # Create a new branch and commit the output
      - name: Create and commit changes to the new branch
        run: |
          
          git checkout -b ${{ github.event.inputs.branch_name }}
          git add .
          git commit -m "Auto GCP Project Plan results for workflow run ${{ github.run_number }}" || echo "No changes to commit"
      # Push the new branch to the repository
      - name: Push new branch
        run: git push origin ${{ github.event.inputs.branch_name }} --force